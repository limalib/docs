***************
Daemon money_d
***************

Documentation for the money_d daemon in */daemons/money_d.c*.

Module Information
==================

 The money daemon manages the legal types of money within the game and their
 exchange rates.

 Objects have an inherent "value".  This is then translated into a
 particular currency via that currency's value.actual exchange rate.

 Currencies have different denomiations, e.g. dollar have dollar and cent.
 Calculation is always based on the lowest denomination. Functions for
 displaying a currency with denominations are provided

 Created Wed Jul  3 20:28:42 MET DST 1996 <Valentino>

 961209, Deathblade: Revised extensively and installed into Lima.
                     Kept Valentino's per-area currencies, but tossed
                     the materials concept.

 Rewritten 10 Feb 98 by MonicaS, removed per-area currencies, added denominations

 Tsath 2023: Modifed to handle floating currencies, so base currency doesn't have
 to be pennies, but pennies can be 0.01 dollar, e.g.

Functions
=========



.. c:function:: string singular_name(string name)

singular_name returns the canonical name for a denomination/currency
e.g. lover case, without spaces and singular.



.. c:function:: nomask int query_exchange_rate(string type)

Returns the exchange rate to map from an object's inherent value to its
actual value in a particular currency.  The value returned is the number
of units this currency is worth.



.. c:function:: nomask string *query_currency_types()

Returns the names of the currencies that are valid within the mud



.. c:function:: varargs nomask string *query_denominations(string type)

Returns the array of denominations of a currency
or all available denominations



.. c:function:: nomask int is_currency(string name)

tests if name is a currency



.. c:function:: nomask int is_denomination(string name)

tests if name is a denomination



.. c:function:: nomask string query_currency(string name)

Returns the currency of a denomination



.. c:function:: nomask string query_plural(string name)

Returns the plural name of a denomination



.. c:function:: nomask float query_factor(string name)

Returns the exchange rate factor of a denomination



.. c:function:: varargs nomask void add_currency(string type, string plural, int flag)

Add a currency to the money system. The base denomination with the same
name will be created too if flag is 0.



.. c:function:: nomask void remove_currency(string type)

Removes a currency from the money system.



.. c:function:: nomask void set_exchange_rate(string type, int rate)

Set the exchange rate (that is the value) of a currency



.. c:function:: void add_denomination(string type, string name, string plural, float factor)

add a denomination to a currency



.. c:function:: void remove_denomination(string name)

removes a denomination from a currency



.. c:function:: nomask string denomination_to_string(int amount, string type)

create a string with correct use of plural from an amount of a denomination.



.. c:function:: mapping calculate_denominations(float f_amount, string currency)

calculate denominations which add up to a certain amount.



.. c:function:: varargs nomask string currency_to_string(mixed money, string currency)

create a string with denominations from an amount of money.
The money is a mapping from denomination to amount or a float.
If the currency is not 0 only money of that type of currency is regarded.
The output is only sorted if you specify the currency.



.. c:function:: mapping *handle_subtract_money(object player, float f_amount, string type)

substracts an amount of currency from a player and adds change.
returns an array of two mappings: substract and change, which
consist of the denominations which were used.


*File generated by LIMA reStructured Text daemon.*
