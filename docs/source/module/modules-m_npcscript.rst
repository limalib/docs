Module *m_npcscript*
*********************

Documentation for the modules-m_npcscript module in */std/modules/m_npcscript.c*.

Module Information
==================

m_npcscript (M_NPCSCRIPT)

This object provides functionality for MOBILE adversaries to execute scripts at given intervals that involve a series
of steps and checks along the way. Need your NPC to go buy a sandwich? This is the way.

This modules inherits M_ACTIONS by itself. If triggers are used, inherit M_TRIGGERS in your mob as well.
Only 1 trigger is supported at a time. Example of script:

  |       create_script("lunch");
  |       add_steps(
  |           "lunch",
  |           ({
  |               step(SCRIPT_ACTION, (: set_for_sale, 0:)),
  |               step(SCRIPT_DESC, "Harry the affectionate"),
  |               step(SCRIPT_ACTION, "say Well, time for some lunch."),
  |               step(SCRIPT_ACTION, "go south@@go south@@go south@@hum"),
  |               step(SCRIPT_WAIT, 5),
  |               step(SCRIPT_ACTION, "push button"),
  |               step(SCRIPT_TRIGGER, "The elevator door opens.", "go northwest"),
  |               step(SCRIPT_DESC, "Harry, leaning against the elevator panel."),
  |               step(SCRIPT_TRIGGER, "The elevator door closes.", "push 8"),
  |               ...
  |           }));

Note, ``set_for_sale(0)`` above closes up shop, so a vendor temporarily sells nothing.

.. TAGS: RST

Functions
=========
.. c:function:: void create_script(string name)

Creates a new script with 'name'.


.. c:function:: int add_steps(string name, class script_step *steps)

Adds a series of steps (an array of class script_step) to a specific script.
This is typically used in conjuction with the step() function that returns
script_step classes for easier class creation.


.. c:function:: varargs class script_step step(int type, mixed payload, mixed extra)

Creates a script_step class. The following types are supported:

  - SCRIPT_ACTION: Do things, say things. Actions can be seperated by @@ to include more actions in one step.

  - SCRIPT_TRIGGER: Will create a step waiting for something to happen, and will then do action.

  - SCRIPT_WAIT: Wait a number of seconds.

  - SCRIPT_DESC: Change the in room description for the mob as they move along in the world.


.. c:function:: void execute_script(string name)

Run a script for the mob by "name".


.. c:function:: mapping query_scripts()

Returns the scripts contained in the mob.



*File generated by Lima 1.1a3 reStructured Text daemon.*
