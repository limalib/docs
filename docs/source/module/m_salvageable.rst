***********************
Module *m_salvageable*
***********************

Documentation for the m_salvageable module in */std/modules/m_salvageable.c*.

Module Information
==================

 Module for salvageable items handling breaking them down into
 "realistic" components so you don't get metal out of a wooden shields.

 Initial version by Tsath@PLEXUS, 2020.

Functions
=========



.. c:function:: int query_salvage_level()

int query_salvage_level()
Returns the salvage level determining how much material an object
will drop when salvaged. This function returns sane values for
weapons, armor and pelts.



.. c:function:: void set_tattered()

void set_tattered()
Sets the object as "tattered" meaning reduced durability,
and gives it a new adjective.



.. c:function:: int is_tattered()

int is_tattered()
Returns true is the object is tattered, else 0.



.. c:function:: string primary_salvage()

Returns the material that is the most prevalent in the item.
 example:
   set_salvageable((["wood":15, "metal":85, ]));
   would return:
   primary_salvage() -> "metal"



.. c:function:: int set_salvageable(mapping s)

int set_salvageable(mapping s)
Sets the salvage mapping for object. Salvage mappings contains
valid categories are defined by being part of:
 CRAFTING_D->query_salvage_categories();
example:
  set_salvageable((["wood":15, "metal":85, ]));

The numbers must sum to 100, or the salvage mapping will be rejected.



.. c:function:: int is_salvageable()

int is_salvageable()
Returns 1 if the object is salvageable, otherwise 0. If the object doesn't
have a valid salvage mapping (see set_salvageable()) it always returns 0.



.. c:function:: mapping query_salvageable()

mapping query_salvageable()
Returns the salvage mapping set by set_salvageable().


*File generated by LIMA reStructured Text daemon.*
